# This is a basic workflow to help you get started with Actions

name: Main

on:
  push:
    branches:
      - 'main'
jobs:

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-18.04

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        ports:
          - "5432:5432"
        env:
          POSTGRES_HOST: "ec2-52-86-115-245.compute-1.amazonaws.com"
          POSTGRES_USER: "plxbeuvdfciyck"
          POSTGRES_PASSWORD: "d374dfbe34c020ce8e01a3db70f997b6505251a6be214f3d2c6e164450b9a1b1"
          POSTGRES_DB: "dcrcb5c9g8467q"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test

  artifact:
    name: Publish - GitHub Packages
    runs-on: ubuntu-18.04
    needs: [test]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  heroku:
    name: Build and push to Heroku
    needs: [artifact]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Update Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}#       
          run: sudo apt update && sudo apt install heroku
        run: curl https://cli-assets.heroku.com/install.sh | sh
      - uses: actions/checkout@v1
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:login
      - name: Build jar
        run: mvn clean package
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
